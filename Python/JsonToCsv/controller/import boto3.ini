import boto3
import pandas as pd
import io

# üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ S3
S3_BUCKET_NAME = "uat-autolist-resource-bucket"
MERGED_FILE_NAME = "merged_instances.xlsx"

s3_client = boto3.client("s3")


def get_excel_files():
    """üìå ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å S3"""
    response = s3_client.list_objects_v2(Bucket=S3_BUCKET_NAME)
    files = [obj["Key"] for obj in response.get("Contents", []) if obj["Key"].endswith(".xlsx")]
    return files


def load_excel_data(file_key):
    """üìå ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡∏à‡∏≤‡∏Å S3 ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô DataFrame"""
    response = s3_client.get_object(Bucket=S3_BUCKET_NAME, Key=file_key)
    excel_data = io.BytesIO(response["Body"].read())
    return pd.read_excel(excel_data, sheet_name=None)


def merge_files():
    """üìå ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå Excel ‡∏à‡∏≤‡∏Å S3 ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÇ‡∏î‡∏¢‡πÅ‡∏¢‡∏Å Sheet ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"""
    all_files = get_excel_files()
    
    # üîπ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° DataFrame ‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    ec2_data, rds_data, ecs_data = [], [], []

    for file_key in all_files:
        sheets = load_excel_data(file_key)

        # üîπ ‡∏Ñ‡∏±‡∏î‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
        if "EC2 Instances" in sheets:
            ec2_data.append(sheets["EC2 Instances"])
        if "RDS Instances" in sheets:
            rds_data.append(sheets["RDS Instances"])
        if "ECS Tasks" in sheets:
            ecs_data.append(sheets["ECS Tasks"])

    # üîπ ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    final_excel = io.BytesIO()
    with pd.ExcelWriter(final_excel, engine="openpyxl") as writer:
        if ec2_data:
            pd.concat(ec2_data).to_excel(writer, sheet_name="EC2 Instances", index=False)
        if rds_data:
            pd.concat(rds_data).to_excel(writer, sheet_name="RDS Instances", index=False)
        if ecs_data:
            pd.concat(ecs_data).to_excel(writer, sheet_name="ECS Tasks", index=False)

    final_excel.seek(0)

    # üîπ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏ß‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà S3
    s3_client.upload_fileobj(final_excel, S3_BUCKET_NAME, MERGED_FILE_NAME)
    return f"https://{S3_BUCKET_NAME}.s3.amazonaws.com/{MERGED_FILE_NAME}"


def lambda_handler(event, context):
    """üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Lambda"""
    merged_file_url = merge_files()
    
    return {
        "statusCode": 200,
        "body": f"Merged Excel uploaded: {merged_file_url}"
    }
